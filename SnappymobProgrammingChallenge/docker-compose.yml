version: '3.8'

services:
  challenge_a:
    build:
      context: .  # Root folder of the project
      dockerfile: ChallengeA/Dockerfile  # Dockerfile for ChallengeA folder
    volumes:
      - ./output:/app/output  # Expose output folder to the host machine
      - generated_data:/app/generatedData  # Shared volume for the generated file
    container_name: challenge_a
    command: ["dotnet", "ChallengeA.dll"]  #This will make a ChallengeA executable in the docker containers

  challenge_b:
    build:
      context: .  # Build context is the root folder of the project
      dockerfile: ChallengeB/Dockerfile  # Dockerfile inside the ChallengeB folder
    depends_on:
      - challenge_a  # Make sure that the Container B start after the Container A
    volumes:
      - ./output:/app/output  # Expose output folder to the host machine
      - generated_data:/app/generatedData  # Shared volume for reading generated file
    container_name: challenge_b
    command: ["dotnet", "ChallengeB.dll"]  # Command to Execute ChallengeB dll

volumes:
  generated_data:  # Define the shared volume for communication between services
